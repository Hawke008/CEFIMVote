{% extends 'base.html.twig' %}

{% block title %}Hello Session Controller
{% endblock %}


{% block body %}
	<style>
		ul {
			padding: 0;
			margin-bottom: 25px;
		}
		li {
			list-style: roman;
			list-style-position: inside
		}
		select {
			display: block;
			width: 100%;
			background-color: white;
			border: 1px solid var(--dark-grey)
		}
		input {
			width: 100%
		}
		.votes-number {
			background-color: var(--light-grey)
		}

		.close-vote,
		.add-candidats,
		.start-vote,
		.start-vote-input,
		.select-candidates,
		.register .login {
			background-color: var(--dark-grey);
			color: white;
			font-weight: 700;
			min-width: 150px;
			border: 1px solid var(--dark-grey);
		}

		.highlight-text {
			font-weight: 700
		}
		.highlight-votes {
			background-color: var(--logo-bg-color);
			padding-right: 5px;
			padding-left: 3px;
			border: 1px solid var(--logo-bg-color);
			border-radius: 20px;
			color: white;
		}
	</style>
	{{dump(state)}}

	<div class="row ">
		<div class="col-5 highlight-text">
			<div class="row">
				<div class="col">
					Promotion
				</div>
				<div class="col">
					{{session.promotion}}
				</div>
			</div>
			<div class="row">
				<div class="col">
					Code de connexion
				</div>
				<div class="col">
					{{ session.codeSession }}
				</div>
			</div>
			<div class="row">
				<div class="col">
					Date de scrutin
				</div>
				<div class="col">
					{{session.heuredebut|format_datetime('full', 'none', locale='fr')}}
				</div>
			</div>
			<div class="row">
				<div class="col">
					Heure de début
				</div>
				<div class="col">
					{{session.heuredebut|format_datetime(pattern="hh'h'mm", locale='fr')}}
				</div>
			</div>
			<div class="row">
				<div class="col">
					Heure de fin
				</div>
				<div class="col"></div>
			</div>
			<div class="row">
				<div class="col">
					Liste des votants
				</div>
				<div class="col ">
					<ul id='connected-voters-container'>
						<div id="reconnexion" hidden>
							{% for electeur in electeurs %}
								<li>{{electeur.prenom}}
									{{electeur.nom}}</li>
							{% endfor %}
						</div>
					</ul>
				</div>
			</div>
			<div class="row">
				<div class="col"></div>
				{% if state==0 %}
					<div class="col" id="select-candidat-container">
						<input type="button" id="select-candidates" class="select-candidates" value="Sélectionner les candidats">
					</div>
				{% endif %}
			</div>
		</div>

		<div class="col-2 text-center highlight-text candidats-title" hidden>
			Candidats
		</div>
		<!-- Affichage du select pour désigner les candidats -->
		{{include('session/partials/_select_candidates.html.twig')}}

		<!-- Affichage des résultats-->	
		{% if state==1 or state==2%}
			<div class="col-2 text-center highlight-text">
				Résultats
			</div>
			<div class="col text-start ">
				<div class="col">
					<p>
						<strong>PREMIER TOUR</strong>
					</p>

					<p class="votes-total-number">Nombre de votants :
						<span class="highlight-votes votes-number"></span>
						<span>/</span>
						<span class="highlight-votes">{{electeurs|length}}</span>
					</p>
					{{include('session/partials/_vote_results.html.twig')}}
				</div>
			</div>
		</div>
	{% endif %}


<script>




// MERCURE : Affichage des électeurs connectés
let connectedElecteurContainer = document.querySelector('#connected-voters-container')
let votesNumber = document.querySelector('.votes-number')
votesNumberValue = 0

//Souscription à Mercure
const eventSource = new EventSource("http://localhost:3000/.well-known/mercure?topic=test");
console.log(eventSource)
eventSource.onmessage = event => {
	const connectedVoters = document.createElement('li');
	connectedElecteurContainer.appendChild(connectedVoters);

	const electeur = JSON.parse(event.data)
	// Affichage des Electeurs connectés
	connectedVoters.innerText = electeur.prenom + ' ' + electeur.nom;

	//Compteur votes
	votesNumberValue += 1
	votesNumber.textContent = votesNumberValue;
}

// Affichage de la liste des électeurs dans le cas ou l'on ferme le navigateur
	let reconnexion = document.querySelector("#reconnexion")
	window.onload = function () {
	reconnexion.hidden = false;
}

// DISPARITION DU BOUTON Sélectionner les candidats : affichage du formulaire
const lancerSelectionCandidats = document.querySelector("#select-candidates")

lancerSelectionCandidats ?. addEventListener('click', function () {
	let sessionId='{{session.id}}'
	getElecteursData(sessionId)
	//Disparition au click du bouton "Sélectionner les candidats"
	let containerBoutonSelectionCandidats = document.querySelector("#select-candidat-container")
	containerBoutonSelectionCandidats.removeChild(lancerSelectionCandidats);
	//Apparition du Titre "Candidats", volet du milieu
	let candidatTitle = document.querySelector('.candidats-title')
	candidatTitle.hidden = false
	//Apparition du select (partial "_select_candidats")
	let selectCandidats = document.querySelector('.select-candidats')
	selectCandidats.hidden = false

	}
)


function getElecteursData(sessionId){
	let URL="http://127.0.0.1:8000/session/dashboard/candidats/"
	const request = new XMLHttpRequest();
	request.open("GET",URL + sessionId, true)
	request.addEventListener("readystatechange", function(){
		if (request.readyState === XMLHttpRequest.DONE) {
			if (request.status === 200) {
				const response = JSON.parse(request.response);
				//Insertion des noms des électeurs dans le Select
				let selectCandidatTitulaire=document.querySelector('.candidat-titulaire')
				let selectCandidatSuppleant=document.querySelector('.candidat-suppleant')
				for (let i=0;i<response.length;i++){
					let optionTitulaire=document.createElement('option')
					optionTitulaire.value=response[i]['id']
					optionTitulaire.textContent=response[i]['prenom'] +" "+response[i]['nom'] 
					let optionSuppleant=optionTitulaire.cloneNode(true);
					selectCandidatTitulaire.appendChild(optionTitulaire)
					selectCandidatSuppleant.appendChild(optionSuppleant)
					} 
				} else {
					console.error('cela ne marche pas !');
			}
		}
	});	
	request.send();
}




</script>


{% endblock %}
