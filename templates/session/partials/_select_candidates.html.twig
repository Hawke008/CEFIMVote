<div class="col-5 p-0">
	<form class="form-candidats">
		<div class="liste-candidats-group">
			<div class="row mb-4 liste-candidats">
				<div class="col">
					<label for="titulaire">Titulaire</label>
					<select type="select" class="candidats">
						{% for electeur in electeurs%}
							<option value="{{electeur.id}}">{{electeur.prenom}}
								{{electeur.nom}}</option>
						{% endfor %}
					</select>
				</div>
				<div class="col">
					<label for="suppleant">Suppléant</label>
					<select type="select" class="candidats">
						{% for electeur in electeurs%}
							<option value="{{electeur.id}}">{{electeur.prenom}}
								{{electeur.nom}}</option>
						{% endfor %}
					</select>
				</div>
			</div>
		</div>
		<div class="row mb-2">
			<div class="col"></div>
			<div class="col">
				<input type="button" class="add-candidats" value="Ajouter des candidats">
			</div>
		</div>
		<div class="row m-0 mt-5 p-0">
			<div class="col-3"></div>
			<div class="col-9 p-0">
			<a href={{path('session_dashboard',{'id':session.id} )}}><input type="button" class="start-vote" value="Commencer le premier tour"></a>
			</div>
		</form>
	</div>
</div>

	<script>

	//selection des candidats
	const listeCandidats = document.querySelector(".liste-candidats")

	const listeCandidatsGroup = document.querySelector(".liste-candidats-group")
	const addCandidats = document.querySelector('.add-candidats')

	addCandidats?. addEventListener("click", function () {
		const ajoutListeCandidats = listeCandidats.cloneNode(true)
		listeCandidatsGroup.appendChild(ajoutListeCandidats)
	})

	const sendCandidatesList = document.querySelector('.start-vote')
	const url = window.location.toString()
	console.log(url);
	sendCandidatesList ?. addEventListener('click', (event) => {

	const candidatesToBeElected = document.querySelectorAll(".candidats")
	let binome = [];

	for (let i = 0; i < candidatesToBeElected.length; i++) {
		if (i % 2 === 0) {
			binome[i] = candidatesToBeElected[i].value
		} else {
			binome[i] = candidatesToBeElected[i].value
		}
	}
	//Requête pour sélectionner les candidats et les sauvegarder en base
	const request = new XMLHttpRequest();
	request.open('POST', url, true)
	request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')
	request.addEventListener('onreadystatechange', () => {
		if (request.readyState === XMLHttpRequest.DONE) {
			if (request.status === 200) {
				const response = JSON.parse(request.response);
				console.log("ca marche");
			} else {
				console.error('ca marche pas !');
			}
		}
	});
	binome = JSON.stringify(binome);
	request.send("binome=" + encodeURIComponent(binome))

	})
	</script>